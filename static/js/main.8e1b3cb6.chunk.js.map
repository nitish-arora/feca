{"version":3,"sources":["shared/constants/index.js","shared/components/login/index.js","shared/components/login/login.js","constants/index.js","utils/HttpHelper.js","utils/AuthHelper.js","components/login-view/login-view.js","components/login-view/index.js","components/App.js","shared/components/profile/profile.js","shared/components/profile/index.js","shared/components/iframe/index.js","shared/components/iframe/iframe.js","shared/components/sidenav/index.js","shared/components/sidenav/sidenav.js","components/dashboard/dashboard.js","components/dashboard/index.js","components/logout/logout.js","components/logout/index.js","components/notfound.js","serviceWorker.js","index.js"],"names":["ACCOUNT","LOGOUT","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","password","onFieldChange","bind","assertThisInitialized","handleSubmit","e","setState","defineProperty","target","name","value","onValueChanges","event","preventDefault","onSubmit","meta","react_default","a","createElement","className","id","TextField","onChange","label","margin","type","Button","variant","form","trim","disabled","loginBtnLabel","error","errorMessage","React","Component","LOGOUT_LOGIN_BUTTON","LOGOUT_MESSAGE","LOGOUT_SECOND_MESSAGE","LOGOUT_TITLE","AUTHENTICATION_FAILED","ERR_UNKNOWN_MESSAGE","HttpHelper","domain","fetch","url","options","isLoggedIn","token","headers","Accept","Content-Type","concat","objectSpread","then","checkStatus","response","json","status","Error","statusText","AuthHelper","Http","login","user","getToken","method","body","JSON","stringify","res","setToken","Promise","resolve","isTokenExpired","jwtExp","decode","exp","Date","setUTCSeconds","now","err","idToken","localStorage","setItem","getItem","logout","removeItem","getParsedToken","_decode","sub","role","auth","LoginView","Auth","handleValueChange","_this2","Constants","code","history","push","catch","_this3","src","data-fallback","alt","components_login","withRouter","App","components_login_view","useStyles","makeStyles","theme","createStyles","icon","spacing","fontSize","Profile","classes","Tooltip","disableFocusListener","disableTouchListener","title","AccountBox_default","onClick","onLogout","ExitToApp_default","IFrame","_this$props","width","height","frameBorder","SideNav","selectedOption","handleClick","links","onSidenavClick","link","map","i","key","header","Home_default","TrendingUp_default","Dashboard","handleLogout","handleSidenavClick","components_sidenav","components_profile","components_iframe","Logout","Notfound","Boolean","window","location","hostname","match","routing","react_router_dom","Fragment","react_router","exact","path","component","render","components_dashboard","to","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e1b3cb6.chunk.js","sourcesContent":["//Login\r\nexport const LOGIN_TITLE = \"Log in\";\r\nexport const LOGIN = \"Login\";\r\nexport const USERNAME = \"Username or E-mail\";\r\nexport const PASSWORD = \"Password\";\r\nexport const INCORRECT_EMAIL_OR_PASSWORD =\r\n  \"Incorrect email or password. Please try again\";\r\n\r\n//Profile\r\nexport const ACCOUNT = \"Account\";\r\nexport const LOGOUT = \"Logout\";\r\n","import Login from \"./login\";\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./login.css\";\r\nimport * as Constants from \"./../../constants\";\r\n\r\n/**\r\n * Component to display login form with submit functionality and validation\r\n *\r\n * ---js----\r\n *\r\n * meta: is an object how the form is setup\r\n * onSubmit: is called when submit is triggered\r\n * onValueChange: is called when input field value is being changed\r\n *\r\n * meta: {\r\n *  usernameLabel: \"USERNAME\", //string\r\n *  passwordLabel: \"PASSWORD\", //string\r\n *  loginBtnLabel: \"LOGIN\", //string\r\n *  error: true | false, //boolean\r\n *  errorMessage: \"INCORRECT_EMAIL_OR_PASSWORD\" //string\r\n * }\r\n *\r\n * handleSubmit(credentials) {\r\n *  // do stuff with login credentials\r\n * }\r\n *\r\n * handleValueChange() {\r\n *  // do stuff with login form input value changes\r\n * }\r\n *\r\n * --- html ---\r\n *\r\n * <Login meta={meta} onSubmit={event => handleSubmit(event)} onValueChanges={() => handleValueChange()} />\r\n */\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    /** default states of login form fields */\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\"\r\n    };\r\n    this.onFieldChange = this.onFieldChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  /** fired off every time the user enters something into the input fields */\r\n  onFieldChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n    this.props.onValueChanges();\r\n  }\r\n\r\n  /** fired off when user submit the forms */\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n  }\r\n\r\n  render() {\r\n    const { meta } = this.props;\r\n    return (\r\n      <div className=\"ne-s-login-form-container\">\r\n        <div className=\"ne-s-login-form\">\r\n          <div className=\"ne-s-login-form-toolbar\">\r\n            <h2>\r\n              <span>{Constants.LOGIN_TITLE}</span>\r\n            </h2>\r\n          </div>\r\n          <form\r\n            className=\"ne-s-login-form\"\r\n            id=\"ne-s-login-form\"\r\n            onSubmit={this.handleSubmit}\r\n          >\r\n            <div className=\"form-field\">\r\n              <TextField\r\n                id=\"user-input\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.onFieldChange}\r\n                label={\r\n                  \"usernameLabel\" in meta //checking property exist in meta\r\n                    ? !!meta.username && meta.username // and it is not empty\r\n                    : Constants.USERNAME\r\n                }\r\n                margin=\"normal\"\r\n              />\r\n            </div>\r\n            <div className=\"form-field\">\r\n              <TextField\r\n                id=\"password-input\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                label={\r\n                  \"passwordLabel\" in meta\r\n                    ? !!meta.password && meta.password\r\n                    : Constants.PASSWORD\r\n                }\r\n                onChange={this.onFieldChange}\r\n                margin=\"normal\"\r\n              />\r\n            </div>\r\n          </form>\r\n          <Button\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            id=\"submit-button\"\r\n            form=\"ne-s-login-form\"\r\n            className={\r\n              this.state.username.trim() !== \"\" && this.state.password !== \"\"\r\n                ? \"not-disabled\"\r\n                : \"disabled\"\r\n            }\r\n            disabled={\r\n              this.state.username.trim() === \"\" || this.state.password === \"\"\r\n            }\r\n          >\r\n            {\"loginBtnLabel\" in meta\r\n              ? !!meta.loginBtnLabel && meta.loginBtnLabel\r\n              : Constants.LOGIN}\r\n          </Button>\r\n\r\n          {meta.error && (\r\n            <div className=\"error\" id=\"login-error\">\r\n              {meta.errorMessage || Constants.INCORRECT_EMAIL_OR_PASSWORD}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** setting validations on props received from parent component */\r\nLogin.propTypes = {\r\n  meta: PropTypes.shape({\r\n    usernameLabel: PropTypes.string,\r\n    passwordLabel: PropTypes.string,\r\n    loginBtnLabel: PropTypes.string,\r\n    error: PropTypes.bool.isRequired,\r\n    errorMessage: PropTypes.string\r\n  }),\r\n  onValueChanges: PropTypes.func,\r\n  onSubmit: PropTypes.func\r\n};\r\n\r\nexport default Login;\r\n","export const LOGOUT_LOGIN_BUTTON = \"Log in again\";\r\nexport const LOGOUT_MESSAGE = \"You are now logged out.\";\r\nexport const LOGOUT_SECOND_MESSAGE =\r\n  \"Thank you for visiting the site. Hope to see you soon again!\";\r\nexport const LOGOUT_TITLE = \"Logged out\";\r\n\r\nexport const AUTHENTICATION_FAILED =\r\n  \"Incorrect E-mail or password. Please try again.\";\r\nexport const ERR_UNKNOWN_MESSAGE = \"Something went wrong\";\r\n","class HttpHelper {\r\n  domain =\r\n    \"http://aus-backoffice-e2e-test.sta-openshift-app.nix.cydmodule.com/aus/v3\";\r\n\r\n  /** performs api call with required headers */\r\n  fetch = (url, options, isLoggedIn, token) => {\r\n    const headers = {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    };\r\n\r\n    // setting authorization header ( Authorization: Bearer xxxxx.xxxxx.xxxx )\r\n    if (isLoggedIn) {\r\n      headers[\"Authorization\"] = \"Bearer \" + token;\r\n    }\r\n\r\n    return fetch(`${this.domain}${url}`, {\r\n      headers,\r\n      ...options\r\n    })\r\n      .then(this.checkStatus)\r\n      .then(response => response.json());\r\n  };\r\n\r\n  /** checking response status */\r\n  checkStatus = response => {\r\n    if (\r\n      (response.status >= 200 && response.status < 300) ||\r\n      response.status === 401\r\n    ) {\r\n      // returning response intact in case of status between 200 &  300 and for status 401\r\n      return response;\r\n    } else {\r\n      var error = new Error(response.statusText);\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n\r\nexport default HttpHelper;\r\n","import decode from \"jwt-decode\";\r\nimport HttpHelper from \"./HttpHelper\";\r\n\r\n/** class providing methods for authentication purpose */\r\nclass AuthHelper {\r\n  Http = new HttpHelper(); // instantiate HttpHelper class in order to use http related functionality\r\n\r\n  /** getting the token from api server using fetch api */\r\n  login = user => {\r\n    const isLoggedIn = this.isLoggedIn();\r\n    const token = this.getToken();\r\n    return this.Http.fetch(\r\n      `/authentication/login`,\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify(user)\r\n      },\r\n      isLoggedIn,\r\n      token\r\n    ).then(res => {\r\n      if (res[\"token\"]) {\r\n        this.setToken(res.token);\r\n      }\r\n      return Promise.resolve(res);\r\n    });\r\n  };\r\n\r\n  /** checking if there is saved token and it's still valid */\r\n  isLoggedIn = () => {\r\n    const token = this.getToken();\r\n    return !!token && !!this.isTokenExpired(token);\r\n  };\r\n\r\n  /** checking if token is expired */\r\n  isTokenExpired = token => {\r\n    try {\r\n      const jwtExp = decode(token).exp;\r\n      const exp = new Date(0);\r\n      exp.setUTCSeconds(jwtExp);\r\n      if (exp < Date.now()) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  /** saves user token to localstorage */\r\n  setToken = idToken => {\r\n    localStorage.setItem(\"id_token\", idToken);\r\n  };\r\n\r\n  /** retrieves user token from local storage */\r\n  getToken = () => {\r\n    return localStorage.getItem(\"id_token\");\r\n  };\r\n\r\n  /** clear user token from localstorage */\r\n  logout = () => {\r\n    localStorage.removeItem(\"id_token\");\r\n    return Promise.resolve();\r\n  };\r\n\r\n  /** decoding the token using jwt-decode package */\r\n  getParsedToken = () => {\r\n    let { sub: username, auth } = decode(this.getToken());\r\n    let role = auth[0].role;\r\n    return { username, role };\r\n  };\r\n}\r\n\r\nexport default AuthHelper;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Login from \"../../shared/components/login\";\r\nimport * as Constants from \"./../../constants\";\r\nimport AuthHelper from \"./../../utils/AuthHelper\";\r\n\r\nimport \"./login-view.css\";\r\n\r\n/** Container component for login form */\r\nclass LoginView extends React.Component {\r\n  /** Instantiate the AuthHelper Class in order to utilize authentication methods */\r\n  Auth = new AuthHelper();\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: false\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleValueChange = this.handleValueChange.bind(this);\r\n  }\r\n\r\n  /** event emitted from login component for handling submission of form */\r\n  handleSubmit(user) {\r\n    this.Auth.login(user)\r\n      .then(res => {\r\n        if (res[\"error\"]) {\r\n          this.setState({\r\n            error: true,\r\n            errorMessage: Constants[res.code]\r\n          });\r\n        } else {\r\n          this.setState({ error: false });\r\n          this.props.history.push(\"/home\");\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          error: true,\r\n          errorMessage: Constants[\"ERR_UNKNOWN_MESSAGE\"]\r\n        });\r\n      });\r\n  }\r\n\r\n  /** event emitted from login component for setting error to be false when user change text values */\r\n  handleValueChange() {\r\n    this.setState({ error: false });\r\n  }\r\n\r\n  /** redirect user to home page who is already logged in */\r\n  componentWillMount() {\r\n    if (this.Auth.isLoggedIn()) {\r\n      this.props.history.push(\"/home\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ne-s-login-component-container\">\r\n        <div className=\"ne-s-logotype-item\">\r\n          <img\r\n            className=\"ne-s-logotype-image\"\r\n            src=\"https://www.netent.com/en/wp-content/themes/netent_corp/assets/img/logotype/netent-logotype.svg\"\r\n            data-fallback=\"../../assets/icons/netent-logotype-fallback.png\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <Login\r\n          meta={this.state}\r\n          onSubmit={user => this.handleSubmit(user)}\r\n          onValueChanges={() => this.handleValueChange()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(LoginView);\r\n","import LoginView from \"./login-view\";\r\n\r\nexport default LoginView;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport LoginView from \"./login-view\";\n\n/** component rendered on starting of app */\nfunction App(props) {\n  return <LoginView />;\n}\n\nexport default App;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\r\nimport AccountBox from \"@material-ui/icons/AccountBox\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\n\r\nimport \"./profile.css\";\r\nimport * as Constants from \"./../../constants\";\r\n\r\n/**\r\n * Component to display the current user's profile.\r\n *\r\n * user: the user to display\r\n * onLogout: emits on logout\r\n *\r\n * ---js---\r\n * user: {\r\n *  username: 'USER_NAME',\r\n *  role: 'ROLE'\r\n * }\r\n *\r\n * handleLogout() {\r\n *  // handle logout\r\n * }\r\n *\r\n * ---html---\r\n * <Profile user={user} onLogout={() => handleLogout()} />\r\n */\r\n\r\n//themeing the material ui components\r\nconst useStyles = makeStyles(theme =>\r\n  createStyles({\r\n    icon: {\r\n      margin: theme.spacing(1),\r\n      fontSize: 18\r\n    }\r\n  })\r\n);\r\n\r\nfunction Profile(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className=\"ne-s-profile-container\">\r\n      <div className=\"profile-toolbar\">\r\n        <Tooltip\r\n          disableFocusListener\r\n          disableTouchListener\r\n          title={Constants.ACCOUNT}\r\n        >\r\n          <div className=\"account-logo\">\r\n            <AccountBox className={classes.icon} />\r\n          </div>\r\n        </Tooltip>\r\n        <div className=\"ne-s-text-name\">{`${props.user.username}`}</div>\r\n        <Tooltip\r\n          disableFocusListener\r\n          disableTouchListener\r\n          title={Constants.LOGOUT}\r\n        >\r\n          <div className=\"ne-s-logout-btn\" onClick={props.onLogout}>\r\n            <ExitToApp className={classes.icon} />\r\n          </div>\r\n        </Tooltip>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n/** setting validations on props received from parent component */\r\nProfile.propTypes = {\r\n  user: PropTypes.shape({\r\n    username: PropTypes.string,\r\n    role: PropTypes.string\r\n  }),\r\n  onLogout: PropTypes.func\r\n};\r\n\r\nexport default Profile;\r\n","import Profile from \"./profile\";\r\n\r\nexport default Profile;\r\n","import IFrame from \"./iframe\";\r\n\r\nexport default IFrame;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./iframe.css\";\r\n\r\n/**\r\n * Component to display src in a iframe\r\n *\r\n * src: link to open in iframe\r\n * height: height of iframe\r\n * width: width of iframe\r\n *\r\n * ---js----\r\n *\r\n * src: 'url',\r\n * width: '100%',\r\n * height: '80%'\r\n *\r\n * --- html ---\r\n *\r\n * <IFrame src={src} height={height} width={width} />\r\n */\r\n\r\nclass IFrame extends React.Component {\r\n  render() {\r\n    const { src, width, height } = this.props;\r\n    return (\r\n      <iframe\r\n        title=\"sidenav-outlet\"\r\n        src={src}\r\n        width={width ? width : \"100%\"}\r\n        height={height ? height : \"100%\"}\r\n        frameBorder=\"0\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n/** setting validations on props received from parent component */\r\nIFrame.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  width: PropTypes.string,\r\n  height: PropTypes.string\r\n};\r\n\r\nexport default IFrame;\r\n","import SideNav from \"./sidenav\";\r\n\r\nexport default SideNav;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./sidenav.css\";\r\n\r\n/**\r\n * Component for creating sidenav\r\n *\r\n * links: array that provide the links of side-navigation\r\n * onSidenavClick: event emitted on clicking of options in side nav\r\n *\r\n * ---js---\r\n * links: [\r\n *  {\r\n *      header: 'HEADER_TEXT'\r\n *      link: 'URL_TO_OPEN'\r\n *      icon: 'REACT_COMPONENT_OF_ICON'\r\n *  }\r\n * ]\r\n *\r\n * ---html---\r\n * <SideNav links={links} onSidenavClick={link => handleSidenavClick(link)} />\r\n */\r\n\r\nclass SideNav extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedOption: null\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  /** setting up first option as default selected option of sidenav */\r\n  componentWillMount() {\r\n    const { links } = this.props;\r\n    this.setState({ selectedOption: links[0] });\r\n    this.props.onSidenavClick(links[0][\"link\"]);\r\n  }\r\n\r\n  /** triggered on sidenav's option click */\r\n  handleClick(link) {\r\n    this.setState({ selectedOption: link });\r\n    this.props.onSidenavClick(link.link);\r\n  }\r\n\r\n  render() {\r\n    const { links, src } = this.props;\r\n    const { selectedOption } = this.state;\r\n    return (\r\n      <div className=\"ne-s-sidenav-container\">\r\n        <div className=\"ne-s-logotype-item\">\r\n          <img\r\n            src={\r\n              src ||\r\n              \"https://www.netent.com/en/wp-content/themes/netent_corp/assets/img/logotype/netent-logotype.svg\"\r\n            }\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className=\"ne-s-tree\">\r\n          {links.map((link, i) => (\r\n            <div\r\n              key={link.header}\r\n              className={`menu-list ${\r\n                selectedOption.header === link.header ? \"selected-sidenav\" : \"\"\r\n              }`}\r\n              onClick={() => this.handleClick(link)}\r\n            >\r\n              {link[\"icon\"] ? (\r\n                <span className=\"nav-icon\">{link.icon}</span>\r\n              ) : null}\r\n              <span className=\"text-header\">{link.header}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** setting validations on props received from parent component */\r\nSideNav.propTypes = {\r\n  links: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      header: PropTypes.string.isRequired,\r\n      link: PropTypes.string.isRequired,\r\n      icon: PropTypes.element // icon should be react component\r\n    })\r\n  ).isRequired,\r\n  src: PropTypes.string\r\n};\r\n\r\nexport default SideNav;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Profile from \"./../../shared/components/profile\";\r\nimport IFrame from \"./../../shared/components/iframe\";\r\nimport SideNav from \"./../../shared/components/sidenav\";\r\n\r\nimport Home from \"@material-ui/icons/Home\";\r\nimport TrendingUp from \"@material-ui/icons/TrendingUp\";\r\n\r\nimport \"./dashboard.css\";\r\nimport AuthHelper from \"./../../utils/AuthHelper\";\r\n\r\n/** array of links to be passed in sidenav component in order to display the options of sidenav*/\r\nconst links = [\r\n  {\r\n    header: \"Home\",\r\n    link: \"\",\r\n    icon: <Home />\r\n  },\r\n  {\r\n    header: \"Combobox\",\r\n    link: \"https://nitish-arora.github.io/combobox/\",\r\n    icon: <TrendingUp />\r\n  },\r\n  {\r\n    header: \"Mosh Programming\",\r\n    link: \"https://programmingwithmosh.com/\",\r\n    icon: <TrendingUp />\r\n  },\r\n  {\r\n    header: \"BOFE\",\r\n    link:\r\n      \"http://bofe-backoffice-e2e-test.stb-openshift-app.nix.cydmodule.com/\",\r\n    icon: <TrendingUp />\r\n  },\r\n  {\r\n    header: \"Cas\",\r\n    link: \"https://cas.netent.com/cas/view\",\r\n    icon: <TrendingUp />\r\n  }\r\n];\r\n\r\n/** Component to be displayed on successfull login */\r\nclass Dashboard extends React.Component {\r\n  /** Instantiate the AuthHelper Class in order to utilize authentication methods */\r\n  Auth = new AuthHelper();\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      src: \"\"\r\n    };\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n    this.handleSidenavClick = this.handleSidenavClick.bind(this);\r\n  }\r\n\r\n  /** event emitted from sidenav for handling logout functionality */\r\n  handleLogout = () => {\r\n    this.Auth.logout().then(() => {\r\n      this.props.history.push(\"/logout\");\r\n    });\r\n  };\r\n\r\n  /** event emitted from sidenav for handling the clicking on sidenav options */\r\n  handleSidenavClick(link) {\r\n    this.setState({ src: link }); //setting the link for iframe\r\n  }\r\n\r\n  render() {\r\n    const user = this.Auth.getParsedToken();\r\n    return (\r\n      <div className=\"ne-s-main-container\">\r\n        <SideNav\r\n          links={links}\r\n          onSidenavClick={link => this.handleSidenavClick(link)}\r\n        />\r\n        <div className=\"ne-s-sidenav-target-container\">\r\n          <div className=\"ne-s-target-toolbar\">\r\n            {user.username ? (\r\n              <Profile user={user} onLogout={() => this.handleLogout()} />\r\n            ) : null}\r\n          </div>\r\n          <div className=\"ne-s-sidenav-outlet\">\r\n            {this.state.src ? (\r\n              <IFrame src={this.state.src} />\r\n            ) : (\r\n              <div className=\"home-title\">Home</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","import Dashboard from \"./dashboard\";\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./logout.css\";\r\nimport * as Constants from \"./../../constants/index\";\r\n\r\n/** Component to show the logout page with the button to go to login page  */\r\nclass Logout extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ne-s-logout-container\">\r\n        <div className=\"ne-s-logotype-item\">\r\n          <img\r\n            className=\"ne-s-logotype-image\"\r\n            src=\"https://www.netent.com/en/wp-content/themes/netent_corp/assets/img/logotype/netent-logotype.svg\"\r\n            data-fallback=\"../../assets/icons/netent-logotype-fallback.png\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className=\"ne-s-logout-page\">\r\n          <div className=\"ne-s-logout-toolbar\">\r\n            <h2>\r\n              <span>{Constants.LOGOUT_TITLE}</span>\r\n            </h2>\r\n          </div>\r\n          <h2>{Constants.LOGOUT_MESSAGE}</h2>\r\n          <h3>{Constants.LOGOUT_SECOND_MESSAGE}</h3>\r\n          <Button\r\n            variant=\"contained\"\r\n            className=\"ne-s-netent-button\"\r\n            onClick={() => this.props.history.push(\"/\")}\r\n          >\r\n            {Constants.LOGOUT_LOGIN_BUTTON}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Logout);\r\n","import Logout from \"./logout\";\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\n\r\n/** component to be displayed on url mismatching */\r\nconst Notfound = () => <h1>Path not found</h1>;\r\n\r\nexport default Notfound;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport {\n  Route,\n  Switch,\n  Redirect,\n  BrowserRouter as Router\n} from \"react-router-dom\";\n\nimport App from \"./components/App\";\nimport Dashboard from \"./components/dashboard\";\nimport Logout from \"./components/logout\";\nimport Notfound from \"./components/notfound\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst routing = (\n  <Router>\n    <React.Fragment>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route\n          path=\"/home\"\n          render={() =>\n            !!localStorage.getItem(\"id_token\") ? (\n              <Dashboard />\n            ) : (\n              <Redirect to=\"/\" />\n            )\n          }\n        />\n        <Route path=\"/logout\" component={Logout} />\n        <Route component={Notfound} />\n      </Switch>\n    </React.Fragment>\n  </Router>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}